[
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About Me",
    "section": "EDUCATION",
    "text": "EDUCATION\nUniversity of Delaware (Delaware, U.S.)\nMaster of Public Policy 2025\n- Thesis: “Why do governments adopt (or abandon) gender-responsive budgeting? The case of Australia.” (Advisor: Jonathan B. Justice)\nChung-Ang University (Seoul, South Korea)\nMaster of Public Administration 2018\n- Thesis: “Influencing elements of trust in government.” (Advisor: Sunghan Cho)\n- Graduate Assistant Scholarship, 2016 – 2017 \nBachelor of Public Policy 2016"
  },
  {
    "objectID": "about.html#research-teaching-experience",
    "href": "about.html#research-teaching-experience",
    "title": "About Me",
    "section": "RESEARCH & TEACHING EXPERIENCE",
    "text": "RESEARCH & TEACHING EXPERIENCE\nResearch Assistant Jan 2023 – Dec 2024\nUniversity of Delaware (Delaware, U.S.)\n- Conducted research on gender-responsive budgeting under the advisement of Dr. Justice.\n- Performed comprehensive literature reviews, sourced relevant data, and carried out both qualitative and quantitative analyses. - Facilitated interviews, synthesized findings, and prepared materials for academic conferences (ABFM 2023 & 2024).\n- Currently developing thesis and journal article manuscripts based on ongoing research outcomes.\nTeaching Assistant August 2023 – Dec 2023\nUniversity of Delaware (Delaware, U.S.)\n- Assisted Dr. Elizabeth Fournier with [HLPR/UAPP 211] Introduction to Public Health,\n- Graded and evaluated student assignments, providing detailed feedback and comments, supported in-class group activities, offering guidance and clarifying course content, held office hours to address student questions, review course materials, and provide additional support.\nGraduate Assistant August 2022 – Jan 2023\nUniversity of Delaware (Delaware, U.S.)\n- Contributed to the development and implementation of the Biden School’s annual survey, sourced information, conducted background research, and crafted survey questions and formats.\nResearch Assistant Jan – Oct 2021\nKorea Institute of Public Administration (Seoul, South Korea)\n- Sourcing information, data analysis, editing articles, supporting interviews, seminars and meetings.\nResearch Assistant Apr – Jul 2019\nKorea Institute of Public Administration (Seoul, South Korea)\n- Sourcing information, data collection and analysis, supporting seminars and meetings.\nResearcher Feb 2019\nArchitecture & Urban Research Institute (Sejong, South Korea)\n- Investigation of research ethics in annual publications.\nResearcher Dec 2018\nKorean Women’s Development Institute (Seoul, South Korea)\n- Investigation of research ethics in annual publications.\nResearcher Nov 2018\nKorea Institute of Public Administration (Seoul, South Korea)\n- Investigation of research ethics in annual publications.\nResearch Assistant Jul – Aug 2017\nKorea Institute of Public Administration (Seoul, South Korea)\n- Making educational content and PowerPoint presentations for Rwanda’s public officers.\nResearch Assistant Jul – Dec 2017\nKorea Forest Service (Daejeon, South Korea)\n- Evaluated agency’s annual performance.\nResearch Assistant Aug 2017\nKorea Research Institute for Local Administration (Wonju-si, Gangwon-do, South Korea)\n- Designed and visualized framework of public organizations.\nResearch Assistant Jul – Oct 2017\nKorea Radio Promotion Association (Seoul, South Korea)\n- Researched to resolve fringe areas in South Korea.\nResearch Assistant May – Aug 2017\nNational Research Council of Economics, Humanities and Social Sciences (Sejong, South Korea)\n- Investigation of research ethics in annual publications."
  },
  {
    "objectID": "about.html#presentation",
    "href": "about.html#presentation",
    "title": "About Me",
    "section": "PRESENTATION",
    "text": "PRESENTATION\n“Why do governments adopt (or abandon) gender-responsive budgeting? The case of Australia,”\nAssociation for Budgeting and Financial Management (ABFM), Cleveland, OH, 2024\n“Why do governments adopt (or abandon) gender-responsive budgeting? The case of Australia,”\n2024 Public Finance and Budgeting Northeastern Workshop, Newark, NJ, 2024\n“Gender-Responsive Budgeting Themes and Variation,”\nAssociation for Budgeting and Financial Management (ABFM), Denver, CO, 2023\n“Government trust in South Korea, 2013 – 2016,”\nSino-US International Conference for Public Administration, Beijing, China, 2018."
  },
  {
    "objectID": "about.html#competencies-interests",
    "href": "about.html#competencies-interests",
    "title": "About Me",
    "section": "COMPETENCIES & INTERESTS",
    "text": "COMPETENCIES & INTERESTS\nLanguage Skills: Korean (Native), English (IELTS Band 7; CEFR C1)\nIT Skills: R, SPSS, Microsoft Office Suite, AMOS"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Coursework of 2025 Fall",
    "section": "",
    "text": "This homepage is for 2025 Fall - [EPPS 6302] Methods of Data Collection and Production\n\n\nThis website is created using RStudio Quarto. To learn more about Quarto websites visit https://quarto.org/docs/websites.\n© 2025 . All rights reserved."
  },
  {
    "objectID": "assignments/assign01.html",
    "href": "assignments/assign01.html",
    "title": "Assignment 01",
    "section": "",
    "text": "Draw a plot graph in class (09.01.2025)\n\n\nplot(iris, pch=20, cex= .8, col=\"skyblue\")\n\n\n\n\n\n\n\n\n\nIncluded my CV at About Me page."
  },
  {
    "objectID": "assignments/assign02.html",
    "href": "assignments/assign02.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Google Trends data\n1. Use Google Trends website (https://trends.google.com/home)\n2. Use gtrendsR package to collect data (use gtrendsR01.R program)"
  },
  {
    "objectID": "assignments/assign02.html#google-trends-with-r",
    "href": "assignments/assign02.html#google-trends-with-r",
    "title": "Assignment 2",
    "section": "",
    "text": "Google Trends data\n1. Use Google Trends website (https://trends.google.com/home)\n2. Use gtrendsR package to collect data (use gtrendsR01.R program)"
  },
  {
    "objectID": "assignments/assign02.html#codes",
    "href": "assignments/assign02.html#codes",
    "title": "Assignment 2",
    "section": "Codes",
    "text": "Codes\n\nTrouble shooting\nI set the code: {r, error=TRUE}\nThis pushes Quarto: “Even if there’s an error in this chunk, keep rendering the document.”\n\n\n\n\nTrump & Harris Election data\nMy gtrendsR() chunk is currently being blocked by Google Trends and may not display data.\n\nlibrary(gtrendsR)\nTrumpHarrisElection = gtrends(c(\"Trump\",\"Harris\",\"election\"), onlyInterest = TRUE, geo = \"US\", \n                              gprop = \"web\", time = \"today+5-y\", category = 0) # last five years\n\nError in get_widget(comparison_item, category, gprop, hl, cookie_url, : widget$status_code == 200 is not TRUE\n\nthe_df=TrumpHarrisElection$interest_over_time\n\nError: object 'TrumpHarrisElection' not found\n\nplot(TrumpHarrisElection)\n\nError: object 'TrumpHarrisElection' not found\n\ntg = gtrends(\"tariff\", time = \"all\")\n\nError in get_widget(comparison_item, category, gprop, hl, cookie_url, : widget$status_code == 200 is not TRUE"
  },
  {
    "objectID": "assignments/assign03.html",
    "href": "assignments/assign03.html",
    "title": "Assignment 3. Mapping Census Data",
    "section": "",
    "text": "Use tidycensus to retrieve ACS 2023 5-year estimates, create a tidy dataset, and produce one map and one table with short interpretation.\n\n\n\n\n\n\n# Use tidycensus\n\nlibrary(tidycensus)          # Access US Census Data \nlibrary(tigris)\n\nTo enable caching of data, set `options(tigris_use_cache = TRUE)`\nin your R script or .Rprofile.\n\nlibrary(tidyr)               # Make a table\nlibrary(sf)\n\nLinking to GEOS 3.13.1, GDAL 3.11.0, PROJ 9.6.0; sf_use_s2() is TRUE\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\nlibrary(readr)\n\n\n\n\n\n\n\n# census_api_key(\"YOUR_API_KEY_HERE\", install = TRUE)\n\ncensus_api_key(\"d82f44f826724f3cfc3bd1bbb142fe58e67932a4\", install = FALSE)\n\nTo install your API key for use in future sessions, run this function with `install = TRUE`.\n\nSys.getenv(\"CENSUS_API_KEY\")\n\n[1] \"d82f44f826724f3cfc3bd1bbb142fe58e67932a4\"\n\n\n\n\n\n\n\n\n# Check set\nacs_2023 &lt;- load_variables(year = 2023, dataset = \"acs5\", cache = TRUE)\nView(acs_2023)\n\n# Make variable set\nvars &lt;- c(\n  male_total       = \"B01001_002\",\n  female_total     = \"B01001_026\",\n  median_income    = \"B19013_001\" )\n\n\n\n\n\n\n\n# All counties in Texas\ntx &lt;- get_acs(geography = \"county\", variables = vars, state = \"TX\", year = 2023, \n              survey = \"acs5\", geometry = TRUE)\n\nGetting data from the 2019-2023 5-year ACS\n\n\nDownloading feature geometry from the Census website.  To cache shapefiles for use in future sessions, set `options(tigris_use_cache = TRUE)`.\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |                                                                      |   1%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |==                                                                    |   4%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |===                                                                   |   5%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |=======                                                               |  11%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |=========                                                             |  14%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |===========                                                           |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |============                                                          |  18%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |==============                                                        |  19%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |==============                                                        |  21%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |=================                                                     |  25%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |===================                                                   |  26%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |===================                                                   |  28%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=====================                                                 |  29%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |=====================                                                 |  31%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=======================                                               |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |=======================                                               |  34%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |=========================                                             |  35%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |==========================                                            |  38%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |============================                                          |  39%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |============================                                          |  41%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |=============================                                         |  42%\n  |                                                                            \n  |==============================                                        |  42%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |==============================                                        |  44%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |===============================                                       |  45%\n  |                                                                            \n  |================================                                      |  45%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |=================================                                     |  48%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |===================================                                   |  49%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |===================================                                   |  51%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=====================================                                 |  52%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |=====================================                                 |  54%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |=======================================                               |  55%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |========================================                              |  56%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |========================================                              |  58%\n  |                                                                            \n  |=========================================                             |  58%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |==========================================                            |  59%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |==========================================                            |  61%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |============================================                          |  62%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |============================================                          |  64%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |=============================================                         |  65%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |==============================================                        |  66%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |===============================================                       |  68%\n  |                                                                            \n  |================================================                      |  68%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |=================================================                     |  69%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |=================================================                     |  71%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |==================================================                    |  72%\n  |                                                                            \n  |===================================================                   |  72%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |=====================================================                 |  75%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |======================================================                |  78%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |========================================================              |  79%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |========================================================              |  81%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |==========================================================            |  82%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |===========================================================           |  85%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |=============================================================         |  86%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |=============================================================         |  88%\n  |                                                                            \n  |==============================================================        |  88%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |===============================================================       |  89%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |===============================================================       |  91%\n  |                                                                            \n  |================================================================      |  91%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |=================================================================     |  94%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |==================================================================    |  95%\n  |                                                                            \n  |===================================================================   |  95%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |====================================================================  |  96%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |====================================================================  |  98%\n  |                                                                            \n  |===================================================================== |  98%\n  |                                                                            \n  |===================================================================== |  99%\n  |                                                                            \n  |======================================================================|  99%\n  |                                                                            \n  |======================================================================| 100%\n\n\n\n\n\n\n\n\n# Reshape\ntx_wide &lt;- tx %&gt;%\n  select(NAME, variable, estimate, moe, geometry) %&gt;%\n  pivot_wider(\n    id_cols = c(NAME, geometry),\n    names_from = variable,\n    values_from = c(estimate, moe),\n    names_glue = \"{variable}_{.value}\" )\n\nnames(tx_wide)\n\n[1] \"NAME\"                   \"geometry\"               \"male_total_estimate\"   \n[4] \"female_total_estimate\"  \"median_income_estimate\" \"male_total_moe\"        \n[7] \"female_total_moe\"       \"median_income_moe\"     \n\n# Male / Female Ratio\ntx_wide &lt;- tx_wide %&gt;%\n  mutate(male_female_ratio = male_total_estimate / female_total_estimate)\n\nView(tx_wide)\n\n\n\n\n\n\n\n# Choropleth of Median Household Income\nggplot(tx_wide) +\n  geom_sf(aes(fill = median_income_estimate), color = \"white\", size = 0.1) +\n  scale_fill_viridis_c(\n    option = \"turbo\",\n    name = \"Median Income ($)\",\n    labels = scales::dollar_format()  ) +\n  labs(\n    title = \"Median Household Income by County (Texas, 2023)\",\n    caption = \"Source: U.S. Census Bureau, ACS 5-Year Estimates\"  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n# Choropleth of Male/Female Ratio\nggplot(tx_wide) +\n  geom_sf(aes(fill = male_female_ratio), color = \"white\", size = 0.1) +\n  scale_fill_viridis_c(\n    option = \"plasma\",\n    name = \"Male/Female Ratio\",\n    direction = -1  ) +\n  labs(\n    title = \"Male-to-Female Ratio by County (Texas, 2023)\",\n    caption = \"Source: U.S. Census Bureau, ACS 5-Year Estimates\"  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe choropleth map highlights income disparities across Texas. While urban counties exhibit higher median household incomes, rural and border counties tend to have lower income levels. The gender ratio table reveals notable demographic differences. In some rural counties, the male population exceeds the female population, which may be associated with industry-specific employment patterns or migration trends."
  },
  {
    "objectID": "assignments/assign03.html#mapping-census-data",
    "href": "assignments/assign03.html#mapping-census-data",
    "title": "Assignment 3. Mapping Census Data",
    "section": "",
    "text": "Use tidycensus to retrieve ACS 2023 5-year estimates, create a tidy dataset, and produce one map and one table with short interpretation.\n\n\n\n\n\n\n# Use tidycensus\n\nlibrary(tidycensus)          # Access US Census Data \nlibrary(tigris)\n\nTo enable caching of data, set `options(tigris_use_cache = TRUE)`\nin your R script or .Rprofile.\n\nlibrary(tidyr)               # Make a table\nlibrary(sf)\n\nLinking to GEOS 3.13.1, GDAL 3.11.0, PROJ 9.6.0; sf_use_s2() is TRUE\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\nlibrary(readr)\n\n\n\n\n\n\n\n# census_api_key(\"YOUR_API_KEY_HERE\", install = TRUE)\n\ncensus_api_key(\"d82f44f826724f3cfc3bd1bbb142fe58e67932a4\", install = FALSE)\n\nTo install your API key for use in future sessions, run this function with `install = TRUE`.\n\nSys.getenv(\"CENSUS_API_KEY\")\n\n[1] \"d82f44f826724f3cfc3bd1bbb142fe58e67932a4\"\n\n\n\n\n\n\n\n\n# Check set\nacs_2023 &lt;- load_variables(year = 2023, dataset = \"acs5\", cache = TRUE)\nView(acs_2023)\n\n# Make variable set\nvars &lt;- c(\n  male_total       = \"B01001_002\",\n  female_total     = \"B01001_026\",\n  median_income    = \"B19013_001\" )\n\n\n\n\n\n\n\n# All counties in Texas\ntx &lt;- get_acs(geography = \"county\", variables = vars, state = \"TX\", year = 2023, \n              survey = \"acs5\", geometry = TRUE)\n\nGetting data from the 2019-2023 5-year ACS\n\n\nDownloading feature geometry from the Census website.  To cache shapefiles for use in future sessions, set `options(tigris_use_cache = TRUE)`.\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |                                                                      |   1%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |==                                                                    |   4%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |===                                                                   |   5%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |=======                                                               |  11%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |=========                                                             |  14%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |===========                                                           |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |============                                                          |  18%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |==============                                                        |  19%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |==============                                                        |  21%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |=================                                                     |  25%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |===================                                                   |  26%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |===================                                                   |  28%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=====================                                                 |  29%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |=====================                                                 |  31%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=======================                                               |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |=======================                                               |  34%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |=========================                                             |  35%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |==========================                                            |  38%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |============================                                          |  39%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |============================                                          |  41%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |=============================                                         |  42%\n  |                                                                            \n  |==============================                                        |  42%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |==============================                                        |  44%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |===============================                                       |  45%\n  |                                                                            \n  |================================                                      |  45%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |=================================                                     |  48%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |===================================                                   |  49%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |===================================                                   |  51%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=====================================                                 |  52%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |=====================================                                 |  54%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |=======================================                               |  55%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |========================================                              |  56%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |========================================                              |  58%\n  |                                                                            \n  |=========================================                             |  58%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |==========================================                            |  59%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |==========================================                            |  61%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |============================================                          |  62%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |============================================                          |  64%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |=============================================                         |  65%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |==============================================                        |  66%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |===============================================                       |  68%\n  |                                                                            \n  |================================================                      |  68%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |=================================================                     |  69%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |=================================================                     |  71%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |==================================================                    |  72%\n  |                                                                            \n  |===================================================                   |  72%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |=====================================================                 |  75%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |======================================================                |  78%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |========================================================              |  79%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |========================================================              |  81%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |==========================================================            |  82%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |===========================================================           |  85%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |=============================================================         |  86%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |=============================================================         |  88%\n  |                                                                            \n  |==============================================================        |  88%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |===============================================================       |  89%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |===============================================================       |  91%\n  |                                                                            \n  |================================================================      |  91%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |=================================================================     |  94%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |==================================================================    |  95%\n  |                                                                            \n  |===================================================================   |  95%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |====================================================================  |  96%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |====================================================================  |  98%\n  |                                                                            \n  |===================================================================== |  98%\n  |                                                                            \n  |===================================================================== |  99%\n  |                                                                            \n  |======================================================================|  99%\n  |                                                                            \n  |======================================================================| 100%\n\n\n\n\n\n\n\n\n# Reshape\ntx_wide &lt;- tx %&gt;%\n  select(NAME, variable, estimate, moe, geometry) %&gt;%\n  pivot_wider(\n    id_cols = c(NAME, geometry),\n    names_from = variable,\n    values_from = c(estimate, moe),\n    names_glue = \"{variable}_{.value}\" )\n\nnames(tx_wide)\n\n[1] \"NAME\"                   \"geometry\"               \"male_total_estimate\"   \n[4] \"female_total_estimate\"  \"median_income_estimate\" \"male_total_moe\"        \n[7] \"female_total_moe\"       \"median_income_moe\"     \n\n# Male / Female Ratio\ntx_wide &lt;- tx_wide %&gt;%\n  mutate(male_female_ratio = male_total_estimate / female_total_estimate)\n\nView(tx_wide)\n\n\n\n\n\n\n\n# Choropleth of Median Household Income\nggplot(tx_wide) +\n  geom_sf(aes(fill = median_income_estimate), color = \"white\", size = 0.1) +\n  scale_fill_viridis_c(\n    option = \"turbo\",\n    name = \"Median Income ($)\",\n    labels = scales::dollar_format()  ) +\n  labs(\n    title = \"Median Household Income by County (Texas, 2023)\",\n    caption = \"Source: U.S. Census Bureau, ACS 5-Year Estimates\"  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n# Choropleth of Male/Female Ratio\nggplot(tx_wide) +\n  geom_sf(aes(fill = male_female_ratio), color = \"white\", size = 0.1) +\n  scale_fill_viridis_c(\n    option = \"plasma\",\n    name = \"Male/Female Ratio\",\n    direction = -1  ) +\n  labs(\n    title = \"Male-to-Female Ratio by County (Texas, 2023)\",\n    caption = \"Source: U.S. Census Bureau, ACS 5-Year Estimates\"  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe choropleth map highlights income disparities across Texas. While urban counties exhibit higher median household incomes, rural and border counties tend to have lower income levels. The gender ratio table reveals notable demographic differences. In some rural counties, the male population exceeds the female population, which may be associated with industry-specific employment patterns or migration trends."
  },
  {
    "objectID": "assignments/assign04.html",
    "href": "assignments/assign04.html",
    "title": "Assignment 04",
    "section": "",
    "text": "Scraping Foreign reserve data from Wikipedia\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   4.0.0     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(rvest)\n\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n\nurl &lt;- 'https://en.wikipedia.org/wiki/List_of_countries_by_foreign-exchange_reserves'\n\n#Reading the HTML code from the Wiki website\nwikiforreserve &lt;- read_html(url)\nclass(wikiforreserve)\n\n[1] \"xml_document\" \"xml_node\"    \n\n# Grab ALL tables on the page\ntables &lt;- wikiforreserve %&gt;%\n  html_nodes(\"table\") %&gt;%\n  html_table(fill = TRUE)\n\nlength(tables)\n\n[1] 4\n\n\n\n\n\n\n\n\n# Gender Inequality Index (GII) data\n\n# Input the url\ngii_url &lt;- \"https://en.wikipedia.org/wiki/Gender_Inequality_Index\"\ngii &lt;- read_html(gii_url)\n\n# Check tables\ngii_tables &lt;- gii %&gt;%\n  html_nodes(\"table\") %&gt;%\n  html_table(fill = TRUE)\n\nlength(gii_tables)\n\n[1] 5\n\n# Modification\ngii_total &lt;- gii_tables[[2]]\nhead(gii_total)\n\n# A tibble: 6 × 4\n  `GII Rank` `HDI Rank` Country     `GII Value`\n       &lt;int&gt;      &lt;int&gt; &lt;chr&gt;             &lt;dbl&gt;\n1          1          2 Switzerland       0.025\n2          2          1 Norway            0.038\n3          3         11 Finland           0.039\n4          4          8 Netherlands       0.043\n5          4         10 Denmark           0.043\n6          6          7 Sweden            0.045\n\ngii_top &lt;- gii_tables[[3]]\nhead(gii_top)\n\n# A tibble: 6 × 9\n  Country     `GII Rank\\n(GII value) 2018` `GII Rank 2012` `GII Value 2012`\n  &lt;chr&gt;       &lt;chr&gt;                                  &lt;int&gt;            &lt;dbl&gt;\n1 Netherlands 4 (0.041)                                  1            0.045\n2 Sweden      2 (0.040)                                  2            0.055\n3 Denmark     2 (0.040)                                  3            0.057\n4 Switzerland 1 (0.037)                                  4            0.057\n5 Norway      5 (0.044)                                  5            0.065\n6 Finland     7 (0.050)                                  6            0.075\n# ℹ 5 more variables: `HDI Rank 2012` &lt;chr&gt;, `GII Rank 2011` &lt;chr&gt;,\n#   `GII Value 2011` &lt;chr&gt;, `GII Rank 2008` &lt;chr&gt;, `GII Value 2008` &lt;chr&gt;\n\ngii_btm &lt;- gii_tables[[5]]\nhead(gii_btm)\n\n# A tibble: 6 × 8\n  Country                GII Rank\\n(GII value…¹ `GII Value 2012` `HDI Rank 2012`\n  &lt;chr&gt;                  &lt;chr&gt;                             &lt;dbl&gt;           &lt;int&gt;\n1 Yemen                  162 (0.834)                       0.823             160\n2 Afghanistan            143 (0.575)                       0.712             175\n3 Niger                  154 (0.647)                       0.707             186\n4 Congo                  156 (0.655)                       0.681             186\n5 Liberia                155 (0.651)                       0.658             174\n6 Central African Repub… 159 (0.682)                       0.654             180\n# ℹ abbreviated name: ¹​`GII Rank\\n(GII value) 2018`\n# ℹ 4 more variables: `GII Rank 2011` &lt;chr&gt;, `GII Value 2011` &lt;chr&gt;,\n#   `GII Rank 2008` &lt;chr&gt;, `GII Value 2008` &lt;chr&gt;\n\n\n\n\n\n\n\n1. Original Full List\n\n# Checking the table\ncolnames(gii_total)\n\n[1] \"GII Rank\"  \"HDI Rank\"  \"Country\"   \"GII Value\"\n\n# Clean up the GII Table\ngii_total_clean &lt;- gii_total %&gt;%\n  filter(!is.na(`GII Rank`)) %&gt;%\n  mutate(\n    gii_rank = as.integer(`GII Rank`),\n    hdi_rank = as.integer(`HDI Rank`),\n    country  = as.character(Country),\n    gii_value = as.numeric(`GII Value`)  ) %&gt;%\n  select(gii_rank, hdi_rank, country, gii_value)\n\ngii_total_clean &lt;- gii_total_clean %&gt;%\n  mutate(data_year = 2019)\n\nhead(gii_total_clean)\n\n# A tibble: 6 × 5\n  gii_rank hdi_rank country     gii_value data_year\n     &lt;int&gt;    &lt;int&gt; &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;\n1        1        2 Switzerland     0.025      2019\n2        2        1 Norway          0.038      2019\n3        3       11 Finland         0.039      2019\n4        4        8 Netherlands     0.043      2019\n5        4       10 Denmark         0.043      2019\n6        6        7 Sweden          0.045      2019\n\n\nNote: The Gender Inequality Index (GII) values used in this analysis are from the 2019 dataset, as reported on Wikipedia.\n\n\n2. GII Top-10 Countries\n\nlibrary(stringr)\n\n# Clean up the GII Top-10 Countries Table\ncolnames(gii_top)                        # Check the variables\n\n[1] \"Country\"                    \"GII Rank\\n(GII value) 2018\"\n[3] \"GII Rank 2012\"              \"GII Value 2012\"            \n[5] \"HDI Rank 2012\"              \"GII Rank 2011\"             \n[7] \"GII Value 2011\"             \"GII Rank 2008\"             \n[9] \"GII Value 2008\"            \n\nnames(gii_top)[2] &lt;- \"gii_2018_raw\"      # Renaming\nnames(gii_top)[4] &lt;- \"gii_2012\"\nnames(gii_top)[9] &lt;- \"gii_2008\"\n\ngii_top_clean &lt;- gii_top %&gt;%\n  select(country = Country, gii_2018_raw, gii_2012, gii_2008) %&gt;%\n  mutate(\n    gii_2018 = str_extract(gii_2018_raw, \"\\\\((.*?)\\\\)\"),\n    gii_2018 = str_remove_all(gii_2018, \"[()]\"),\n    gii_2018 = as.numeric(gii_2018),\n    gii_2012 = as.numeric(gii_2012),\n    gii_2008 = as.numeric(gii_2008)  ) %&gt;%\n\n  select(country, gii_2018, gii_2012, gii_2008) \n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `gii_2008 = as.numeric(gii_2008)`.\nCaused by warning:\n! NAs introduced by coercion\n\nhead(gii_top_clean)\n\n# A tibble: 6 × 4\n  country     gii_2018 gii_2012 gii_2008\n  &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 Netherlands    0.041    0.045    0.174\n2 Sweden         0.04     0.055    0.212\n3 Denmark        0.04     0.057    0.209\n4 Switzerland    0.037    0.057    0.228\n5 Norway         0.044    0.065    0.234\n6 Finland        0.05     0.075    0.248\n\n\nNote: The Gender Inequality Index (GII) values used in this analysis are from the 2018 dataset, as reported on Wikipedia.\n3. GII Bottom-10 Countries**\n\n# Clean up the GII Bottom-10 Countries Table\ncolnames(gii_btm)                        # Check the variables\n\n[1] \"Country\"                    \"GII Rank\\n(GII value) 2018\"\n[3] \"GII Value 2012\"             \"HDI Rank 2012\"             \n[5] \"GII Rank 2011\"              \"GII Value 2011\"            \n[7] \"GII Rank 2008\"              \"GII Value 2008\"            \n\nnames(gii_btm)[2] &lt;- \"gii_2018_raw\"      # Renaming\nnames(gii_btm)[3] &lt;- \"gii_2012_value\"\nnames(gii_btm)[4] &lt;- \"hdi_rank_2012\"\nnames(gii_btm)[8] &lt;- \"gii_2008\"\n\ngii_btm_clean &lt;- gii_btm %&gt;%\n  select(country = Country, gii_2018_raw, gii_2012 = gii_2012_value, gii_2008) %&gt;%\n  mutate(\n    gii_2018 = str_extract(gii_2018_raw, \"\\\\((.*?)\\\\)\"),\n    gii_2018 = str_remove_all(gii_2018, \"[()]\"),\n    gii_2018 = as.numeric(gii_2018),\n    gii_2012 = as.numeric(gii_2012),\n    gii_2008 = as.numeric(gii_2008)  ) %&gt;%\n    \n  select(country, gii_2018, gii_2012, gii_2008)\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `gii_2008 = as.numeric(gii_2008)`.\nCaused by warning:\n! NAs introduced by coercion\n\nhead(gii_btm_clean)\n\n# A tibble: 6 × 4\n  country                  gii_2018 gii_2012 gii_2008\n  &lt;chr&gt;                       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 Yemen                       0.834    0.823   NA    \n2 Afghanistan                 0.575    0.712    0.797\n3 Niger                       0.647    0.707    0.807\n4 Congo                       0.655    0.681    0.814\n5 Liberia                     0.651    0.658    0.766\n6 Central African Republic    0.682    0.654    0.768\n\n\nNote: The Gender Inequality Index (GII) values used in this analysis are from the 2018 dataset, as reported on Wikipedia.\n\n\n\n\n\n1. Source Identification\n- Wikipedia: Gender Inequality Index (GII)\n- Additional datasets: GDP, education (World Bank, UNDP, Gapminder, UNWOMEN, etc.)\n2. Web Scraping Tools\n- R packages: rvest for scraping, tidyverse for cleaning\n- html_nodes() and html_table() to extract HTML tables\n3. Cleaning Strategy\n- Remove headers/footers\n- Convert ranks and values to numeric\n- Filter missing values\n4. Analysis Plan\n- Compare gender inequality by region\n- Visualize GII vs GDP/education\n- Highlight top/bottom ranked countries\n5. Ethical Considerations\n- Use public data only\n- Document scraping code and source URLs"
  },
  {
    "objectID": "assignments/assign04.html#webscraping-1",
    "href": "assignments/assign04.html#webscraping-1",
    "title": "Assignment 04",
    "section": "",
    "text": "Scraping Foreign reserve data from Wikipedia\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   4.0.0     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(rvest)\n\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n\nurl &lt;- 'https://en.wikipedia.org/wiki/List_of_countries_by_foreign-exchange_reserves'\n\n#Reading the HTML code from the Wiki website\nwikiforreserve &lt;- read_html(url)\nclass(wikiforreserve)\n\n[1] \"xml_document\" \"xml_node\"    \n\n# Grab ALL tables on the page\ntables &lt;- wikiforreserve %&gt;%\n  html_nodes(\"table\") %&gt;%\n  html_table(fill = TRUE)\n\nlength(tables)\n\n[1] 4\n\n\n\n\n\n\n\n\n# Gender Inequality Index (GII) data\n\n# Input the url\ngii_url &lt;- \"https://en.wikipedia.org/wiki/Gender_Inequality_Index\"\ngii &lt;- read_html(gii_url)\n\n# Check tables\ngii_tables &lt;- gii %&gt;%\n  html_nodes(\"table\") %&gt;%\n  html_table(fill = TRUE)\n\nlength(gii_tables)\n\n[1] 5\n\n# Modification\ngii_total &lt;- gii_tables[[2]]\nhead(gii_total)\n\n# A tibble: 6 × 4\n  `GII Rank` `HDI Rank` Country     `GII Value`\n       &lt;int&gt;      &lt;int&gt; &lt;chr&gt;             &lt;dbl&gt;\n1          1          2 Switzerland       0.025\n2          2          1 Norway            0.038\n3          3         11 Finland           0.039\n4          4          8 Netherlands       0.043\n5          4         10 Denmark           0.043\n6          6          7 Sweden            0.045\n\ngii_top &lt;- gii_tables[[3]]\nhead(gii_top)\n\n# A tibble: 6 × 9\n  Country     `GII Rank\\n(GII value) 2018` `GII Rank 2012` `GII Value 2012`\n  &lt;chr&gt;       &lt;chr&gt;                                  &lt;int&gt;            &lt;dbl&gt;\n1 Netherlands 4 (0.041)                                  1            0.045\n2 Sweden      2 (0.040)                                  2            0.055\n3 Denmark     2 (0.040)                                  3            0.057\n4 Switzerland 1 (0.037)                                  4            0.057\n5 Norway      5 (0.044)                                  5            0.065\n6 Finland     7 (0.050)                                  6            0.075\n# ℹ 5 more variables: `HDI Rank 2012` &lt;chr&gt;, `GII Rank 2011` &lt;chr&gt;,\n#   `GII Value 2011` &lt;chr&gt;, `GII Rank 2008` &lt;chr&gt;, `GII Value 2008` &lt;chr&gt;\n\ngii_btm &lt;- gii_tables[[5]]\nhead(gii_btm)\n\n# A tibble: 6 × 8\n  Country                GII Rank\\n(GII value…¹ `GII Value 2012` `HDI Rank 2012`\n  &lt;chr&gt;                  &lt;chr&gt;                             &lt;dbl&gt;           &lt;int&gt;\n1 Yemen                  162 (0.834)                       0.823             160\n2 Afghanistan            143 (0.575)                       0.712             175\n3 Niger                  154 (0.647)                       0.707             186\n4 Congo                  156 (0.655)                       0.681             186\n5 Liberia                155 (0.651)                       0.658             174\n6 Central African Repub… 159 (0.682)                       0.654             180\n# ℹ abbreviated name: ¹​`GII Rank\\n(GII value) 2018`\n# ℹ 4 more variables: `GII Rank 2011` &lt;chr&gt;, `GII Value 2011` &lt;chr&gt;,\n#   `GII Rank 2008` &lt;chr&gt;, `GII Value 2008` &lt;chr&gt;\n\n\n\n\n\n\n\n1. Original Full List\n\n# Checking the table\ncolnames(gii_total)\n\n[1] \"GII Rank\"  \"HDI Rank\"  \"Country\"   \"GII Value\"\n\n# Clean up the GII Table\ngii_total_clean &lt;- gii_total %&gt;%\n  filter(!is.na(`GII Rank`)) %&gt;%\n  mutate(\n    gii_rank = as.integer(`GII Rank`),\n    hdi_rank = as.integer(`HDI Rank`),\n    country  = as.character(Country),\n    gii_value = as.numeric(`GII Value`)  ) %&gt;%\n  select(gii_rank, hdi_rank, country, gii_value)\n\ngii_total_clean &lt;- gii_total_clean %&gt;%\n  mutate(data_year = 2019)\n\nhead(gii_total_clean)\n\n# A tibble: 6 × 5\n  gii_rank hdi_rank country     gii_value data_year\n     &lt;int&gt;    &lt;int&gt; &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;\n1        1        2 Switzerland     0.025      2019\n2        2        1 Norway          0.038      2019\n3        3       11 Finland         0.039      2019\n4        4        8 Netherlands     0.043      2019\n5        4       10 Denmark         0.043      2019\n6        6        7 Sweden          0.045      2019\n\n\nNote: The Gender Inequality Index (GII) values used in this analysis are from the 2019 dataset, as reported on Wikipedia.\n\n\n2. GII Top-10 Countries\n\nlibrary(stringr)\n\n# Clean up the GII Top-10 Countries Table\ncolnames(gii_top)                        # Check the variables\n\n[1] \"Country\"                    \"GII Rank\\n(GII value) 2018\"\n[3] \"GII Rank 2012\"              \"GII Value 2012\"            \n[5] \"HDI Rank 2012\"              \"GII Rank 2011\"             \n[7] \"GII Value 2011\"             \"GII Rank 2008\"             \n[9] \"GII Value 2008\"            \n\nnames(gii_top)[2] &lt;- \"gii_2018_raw\"      # Renaming\nnames(gii_top)[4] &lt;- \"gii_2012\"\nnames(gii_top)[9] &lt;- \"gii_2008\"\n\ngii_top_clean &lt;- gii_top %&gt;%\n  select(country = Country, gii_2018_raw, gii_2012, gii_2008) %&gt;%\n  mutate(\n    gii_2018 = str_extract(gii_2018_raw, \"\\\\((.*?)\\\\)\"),\n    gii_2018 = str_remove_all(gii_2018, \"[()]\"),\n    gii_2018 = as.numeric(gii_2018),\n    gii_2012 = as.numeric(gii_2012),\n    gii_2008 = as.numeric(gii_2008)  ) %&gt;%\n\n  select(country, gii_2018, gii_2012, gii_2008) \n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `gii_2008 = as.numeric(gii_2008)`.\nCaused by warning:\n! NAs introduced by coercion\n\nhead(gii_top_clean)\n\n# A tibble: 6 × 4\n  country     gii_2018 gii_2012 gii_2008\n  &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 Netherlands    0.041    0.045    0.174\n2 Sweden         0.04     0.055    0.212\n3 Denmark        0.04     0.057    0.209\n4 Switzerland    0.037    0.057    0.228\n5 Norway         0.044    0.065    0.234\n6 Finland        0.05     0.075    0.248\n\n\nNote: The Gender Inequality Index (GII) values used in this analysis are from the 2018 dataset, as reported on Wikipedia.\n3. GII Bottom-10 Countries**\n\n# Clean up the GII Bottom-10 Countries Table\ncolnames(gii_btm)                        # Check the variables\n\n[1] \"Country\"                    \"GII Rank\\n(GII value) 2018\"\n[3] \"GII Value 2012\"             \"HDI Rank 2012\"             \n[5] \"GII Rank 2011\"              \"GII Value 2011\"            \n[7] \"GII Rank 2008\"              \"GII Value 2008\"            \n\nnames(gii_btm)[2] &lt;- \"gii_2018_raw\"      # Renaming\nnames(gii_btm)[3] &lt;- \"gii_2012_value\"\nnames(gii_btm)[4] &lt;- \"hdi_rank_2012\"\nnames(gii_btm)[8] &lt;- \"gii_2008\"\n\ngii_btm_clean &lt;- gii_btm %&gt;%\n  select(country = Country, gii_2018_raw, gii_2012 = gii_2012_value, gii_2008) %&gt;%\n  mutate(\n    gii_2018 = str_extract(gii_2018_raw, \"\\\\((.*?)\\\\)\"),\n    gii_2018 = str_remove_all(gii_2018, \"[()]\"),\n    gii_2018 = as.numeric(gii_2018),\n    gii_2012 = as.numeric(gii_2012),\n    gii_2008 = as.numeric(gii_2008)  ) %&gt;%\n    \n  select(country, gii_2018, gii_2012, gii_2008)\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `gii_2008 = as.numeric(gii_2008)`.\nCaused by warning:\n! NAs introduced by coercion\n\nhead(gii_btm_clean)\n\n# A tibble: 6 × 4\n  country                  gii_2018 gii_2012 gii_2008\n  &lt;chr&gt;                       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 Yemen                       0.834    0.823   NA    \n2 Afghanistan                 0.575    0.712    0.797\n3 Niger                       0.647    0.707    0.807\n4 Congo                       0.655    0.681    0.814\n5 Liberia                     0.651    0.658    0.766\n6 Central African Republic    0.682    0.654    0.768\n\n\nNote: The Gender Inequality Index (GII) values used in this analysis are from the 2018 dataset, as reported on Wikipedia.\n\n\n\n\n\n1. Source Identification\n- Wikipedia: Gender Inequality Index (GII)\n- Additional datasets: GDP, education (World Bank, UNDP, Gapminder, UNWOMEN, etc.)\n2. Web Scraping Tools\n- R packages: rvest for scraping, tidyverse for cleaning\n- html_nodes() and html_table() to extract HTML tables\n3. Cleaning Strategy\n- Remove headers/footers\n- Convert ranks and values to numeric\n- Filter missing values\n4. Analysis Plan\n- Compare gender inequality by region\n- Visualize GII vs GDP/education\n- Highlight top/bottom ranked countries\n5. Ethical Considerations\n- Use public data only\n- Document scraping code and source URLs"
  },
  {
    "objectID": "assignments/assign05.html",
    "href": "assignments/assign05.html",
    "title": "Assignment 05",
    "section": "",
    "text": "Website GovInfo: https://www.govinfo.gov/app/search/\n\n\n\n\n\n\n# Clean Memory\ngc(reset = TRUE)\n\n          used (Mb) gc trigger (Mb) max used (Mb)\nNcells  600986 32.1    1366068   73   600986 32.1\nVcells 1092528  8.4    8388608   64  1092528  8.4\n\n# Load packages\nlibrary(purrr)\nlibrary(magrittr)\n\n\nAttaching package: 'magrittr'\n\n\nThe following object is masked from 'package:purrr':\n\n    set_names\n\nlibrary(rjson)\nlibrary(jsonlite)\n\n\nAttaching package: 'jsonlite'\n\n\nThe following objects are masked from 'package:rjson':\n\n    fromJSON, toJSON\n\n\nThe following object is masked from 'package:purrr':\n\n    flatten\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:data.table':\n\n    between, first, last\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\n\n\n\n\n\n# Set persistent working directory\nknitr::opts_knit$set(root.dir = \"C:/Users/User/Desktop/EPPS6302/GovInfo/\")\n\n\n\n\n\n\n\n\n# Load the Metadata Files\n\n## CSV method\ngovfiles= read.csv(file=\"https://github.com/datageneration/datamethods/raw/refs/heads/master/webdata/govinfo-search-results-2024-10-13T07_10_42.csv\", skip=2)\n\n## JSON method\n### rjson\ngf_list &lt;- rjson::fromJSON(file =\"https://github.com/datageneration/datamethods/raw/refs/heads/master/webdata/govinfo-search-results-2024-10-13T07_18_29.json\")\ngovfile2=dplyr::bind_rows(gf_list$resultSet)\n\n### jsonlite\ngf_list1 = jsonlite::read_json(\"https://github.com/datageneration/datamethods/raw/refs/heads/master/webdata/govinfo-search-results-2024-10-13T07_18_29.json\")\n\n\n\n\n\n\n\n\ngovfiles3 &lt;- gf_list1$resultSet\n\n# One more step\ngovfiles3 &lt;- gf_list1$resultSet |&gt; dplyr::bind_rows()\n\n\n\n\n\n\n\n\ngovfiles$id = govfiles$packageId\npdf_govfiles_url = govfiles3$pdfLink\npdf_govfiles_id &lt;- govfiles3$index\n\n# Download folder\nsave_dir &lt;- \"C:/Users/User/Desktop/EPPS6302/GovInfo/\"\n\n\n\n\n\n\n\n\ndownload_govfiles_pdf &lt;- function(url, id) {\n  tryCatch({\n    destfile &lt;- paste0(save_dir, \"govfiles_\", id, \".pdf\")\n    download.file(url, destfile = destfile, mode = \"wb\") # Binary files\n    Sys.sleep(runif(1, 1, 3))  # Important: random sleep between 1 and 3 seconds to avoid suspicion of \"hacking\" the server\n    return(paste(\"Successfully downloaded:\", url))\n  },\n  error = function(e) {\n    return(paste(\"Failed to download:\", url))\n  })\n}\n\n\n\n\n\n\n\n\n# One document\nstart.time &lt;- Sys.time()\nmessage(\"Starting downloads\")\n\nStarting downloads\n\nresults &lt;- 1:1 %&gt;% \n  purrr::map_chr(~ download_govfiles_pdf(pdf_govfiles_url[.], pdf_govfiles_id[.]))\n\nWarning in download.file(url, destfile = destfile, mode = \"wb\"): cannot open\nURL\n'https://www.govinfo.gov/content/pkg/BILLS-118sres890is/pdf/BILLS-118sres890is.pdf':\nHTTP status was '503 Service Unavailable'\n\nmessage(\"Finished downloads\")\n\nFinished downloads\n\nend.time &lt;- Sys.time()\ntime.taken &lt;- end.time - start.time\ntime.taken\n\nTime difference of 0.212698 secs\n\n# Ten documents\nstart.time &lt;- Sys.time()\nmessage(\"Starting downloads\")\n\nStarting downloads\n\nresults &lt;- 1:10 %&gt;% \n  purrr::map_chr(~ download_govfiles_pdf(pdf_govfiles_url[.], pdf_govfiles_id[.]))\nmessage(\"Finished downloads\")\n\nFinished downloads\n\nend.time &lt;- Sys.time()\ntime.taken &lt;- end.time - start.time\ntime.taken\n\nTime difference of 20.5731 secs\n\n# Result\nprint(results)\n\n [1] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/BILLS-118sres890is/pdf/BILLS-118sres890is.pdf\"        \n [2] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/BILLS-118sjres114is/pdf/BILLS-118sjres114is.pdf\"      \n [3] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/BILLS-118sres805ats/pdf/BILLS-118sres805ats.pdf\"      \n [4] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/BILLS-118sjres115is/pdf/BILLS-118sjres115is.pdf\"      \n [5] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/BILLS-118sjres113is/pdf/BILLS-118sjres113is.pdf\"      \n [6] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/BILLS-118sjres111is/pdf/BILLS-118sjres111is.pdf\"      \n [7] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/BILLS-118sjres112is/pdf/BILLS-118sjres112is.pdf\"      \n [8] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/CREC-2024-09-25/pdf/CREC-2024-09-25-pt1-PgD951.pdf\"   \n [9] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/CREC-2024-09-25/pdf/CREC-2024-09-25-pt1-PgS6417-2.pdf\"\n[10] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/CREC-2024-09-25/pdf/CREC-2024-09-25-pt1-PgS6418.pdf\"  \n\n\n\n\n\n\n\n\nstart.time &lt;- Sys.time()\nmessage(“Starting downloads”)\nresults &lt;- 1:length(pdf_govfiles_url) %&gt;%\npurrr::map_chr(~ download_govfiles_pdf(pdf_govfiles_url[.], pdf_govfiles_id[.]))\nmessage(“Finished downloads”)\nend.time &lt;- Sys.time()\ntime.taken &lt;- end.time - start.time\ntime.taken\n\n\n\n\n\n\n\n\n\n\n1) Difficulties\n\nDuring the scraping process for government documents from GovInfo.gov, I encountered several challenges.\nThe GovInfo site did not provide options to download search results in CSV or JSON formats directly from the search page. This broke the expected workflow in the assignment, which relies on metadata files to identify and download documents programmatically.\nThus, I had to manually download PDF files. This made the process time-consuming and error-prone.\nSample metadata from GitHub was outdated and did not match the documents I downloaded. Because of this, matching file names to metadata for analysis failed, which limited my ability to annotate or summarize the documents meaningfully.\n\n2) How useable the scraped data?\n\nEven though I was able to download 10 recent documents related to the Foreign Relations Committee, the data was in PDF format, which is difficult to process without extracting the text. The lack of metadata information (such as titles, dates, and summaries) made it difficult to filter, organize, or analyze the documents systematically.\nOverall, the scraped data is partially usable but not ideal for structured analysis without additional manual processing.\n\n\n3) How to improve?\nEven if the website do not provide a CSV or JSON download, I can build a simple metadata table in R. Use file names, inferred dates, and keywords extracted from the text to organize and annotate the documents."
  },
  {
    "objectID": "assignments/assign05.html#government-data-api",
    "href": "assignments/assign05.html#government-data-api",
    "title": "Assignment 05",
    "section": "",
    "text": "Website  https://www.govinfo.gov/app/search/\n\n\n\n\n\n\n\nlibrary(purrr)\nlibrary(magrittr)\n\n\nAttaching package: 'magrittr'\n\n\nThe following object is masked from 'package:purrr':\n\n    set_names\n\nlibrary(rjson)\nlibrary(jsonlite)\n\n\nAttaching package: 'jsonlite'\n\n\nThe following objects are masked from 'package:rjson':\n\n    fromJSON, toJSON\n\n\nThe following object is masked from 'package:purrr':\n\n    flatten\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\nlibrary(readr)\n\n\n\n\n\n# To set a persistent working directory for all chunks\nknitr::opts_knit$set(root.dir =\"C:/Users/User/Desktop/EPPS6302\")"
  },
  {
    "objectID": "assignments/assign06.html",
    "href": "assignments/assign06.html",
    "title": "Assignment 06",
    "section": "",
    "text": "library(quanteda)\n\nPackage version: 4.3.1\nUnicode version: 15.1\nICU version: 74.1\n\n\nParallel computing: 22 of 22 threads used.\n\n\nSee https://quanteda.io for tutorials and examples.\n\nlibrary(quanteda.textmodels)\nlibrary(quanteda.textplots)\nlibrary(quanteda.textstats)\nlibrary(readr)\nlibrary(ggplot2)\n\n\n\n\n\n\n\n\n\n\nsummit &lt;- read_csv(\"https://raw.githubusercontent.com/datageneration/datamethods/master/textanalytics/summit_11162021.csv\")\n\nRows: 14520 Columns: 90\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (50): screen_name, text, source, reply_to_screen_name, hashtags, symbol...\ndbl  (26): user_id, status_id, display_text_width, reply_to_status_id, reply...\nlgl  (10): is_quote, is_retweet, quote_count, reply_count, ext_media_type, q...\ndttm  (4): created_at, quoted_created_at, retweet_created_at, account_create...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nView(summit)\n\nsum_twt = summit$text\ntoks = tokens(sum_twt)\nsumtwtdfm &lt;- dfm(toks)\nclass(toks)\n\n[1] \"tokens\"\n\n\n\n\n\n\n\n\n# Note: https://quanteda.io/reference/textmodel_lsa.html\n\nsum_lsa &lt;- textmodel_lsa(sumtwtdfm, nd=4,  margin = c(\"both\", \"documents\", \"features\"))\nsummary(sum_lsa)\n\n                Length    Class     Mode   \nsk                      4 -none-    numeric\ndocs                58080 -none-    numeric\nfeatures            63972 -none-    numeric\nmatrix_low_rank 232218360 -none-    numeric\ndata            232218360 dgCMatrix S4     \n\nhead(sum_lsa$docs)\n\n              [,1]          [,2]          [,3]          [,4]\ntext1 8.678102e-03  9.529008e-03 -3.178574e-03  1.380732e-02\ntext2 8.676818e-06 -8.806186e-06 -5.989637e-06  1.677631e-05\ntext3 2.922127e-03  6.778967e-03  1.131673e-03 -3.176902e-03\ntext4 1.046624e-02  8.884054e-04 -4.282723e-03  4.960680e-03\ntext5 3.251208e-03  8.005843e-03  2.208204e-04 -4.656367e-03\ntext6 3.251208e-03  8.005843e-03  2.208204e-04 -4.656367e-03\n\nclass(sum_lsa)\n\n[1] \"textmodel_lsa\"\n\ntweet_dfm &lt;- tokens(sum_twt, remove_punct = TRUE) %&gt;%\n  dfm()\nhead(tweet_dfm)\n\nDocument-feature matrix of: 6 documents, 15,927 features (99.89% sparse) and 0 docvars.\n       features\ndocs    breaking news us president biden amp communist china leader xi\n  text1        1    1  1         1     1   1         1     2      1  1\n  text2        0    0  0         0     0   0         0     0      0  0\n  text3        0    0  0         0     1   0         0     0      0  1\n  text4        0    0  0         1     1   0         0     0      0  1\n  text5        0    0  0         0     1   0         0     0      0  1\n  text6        0    0  0         0     1   0         0     0      0  1\n[ reached max_nfeat ... 15,917 more features ]\n\ntag_dfm &lt;- dfm_select(tweet_dfm, pattern = \"#*\")\ntoptag &lt;- names(topfeatures(tag_dfm, 50))\nhead(toptag, 10)\n\n [1] \"#china\"       \"#biden\"       \"#xijinping\"   \"#joebiden\"    \"#america\"    \n [6] \"#americans\"   \"#coronavirus\" \"#fentanyl\"    \"#xi\"          \"#us\"         \n\nlibrary(\"quanteda.textplots\")\ntag_fcm &lt;- fcm(tag_dfm)\nhead(tag_fcm)\n\nFeature co-occurrence matrix of: 6 by 665 features.\n               features\nfeatures        #breaking #breakingnews #biden #china #usa #pray4america\n  #breaking             0             4      5      5    5             0\n  #breakingnews         0             0      4      5    4             0\n  #biden                0             0      0    443   49             0\n  #china                0             0      0      8   76             0\n  #usa                  0             0      0      0    6             0\n  #pray4america         0             0      0      0    0             0\n               features\nfeatures        #joebiden #xijinping #america #americans\n  #breaking             0          0        0          0\n  #breakingnews         0          0        0          0\n  #biden              299        370      302        295\n  #china              339        434      308        295\n  #usa                 12         15        0          0\n  #pray4america         0          0        0          0\n[ reached max_nfeat ... 655 more features ]\n\ntopgat_fcm &lt;- fcm_select(tag_fcm, pattern = toptag)\ntextplot_network(topgat_fcm, min_freq = 50, edge_alpha = 0.8, edge_size = 1)\n\n\n\n\n\n\n\nuser_dfm &lt;- dfm_select(tweet_dfm, pattern = \"@*\")\ntopuser &lt;- names(topfeatures(user_dfm, 50))\nhead(topuser, 20)\n\n [1] \"@potus\"           \"@politico\"        \"@joebiden\"        \"@jendeben\"       \n [5] \"@eneskanter\"      \"@nwadhams\"        \"@phelimkine\"      \"@nahaltoosi\"     \n [9] \"@nba\"             \"@washwizards\"     \"@pelicansnba\"     \"@capitalonearena\"\n[13] \"@kevinliptakcnn\"  \"@foxbusiness\"     \"@morningsmaria\"   \"@scmpnews\"       \n[17] \"@petermartin_pcm\" \"@nytimes\"         \"@uyghur_american\" \"@kaylatausche\"   \n\nuser_fcm &lt;- fcm(user_dfm)\nhead(user_fcm, 20)\n\nFeature co-occurrence matrix of: 20 by 711 features.\n                 features\nfeatures          @youtube @bfmtv @cnn @lauhaim @barackobama @joebiden\n  @youtube               0      0    0        0            0         0\n  @bfmtv                 0      0    1        1            1         1\n  @cnn                   0      0    0        1            1         1\n  @lauhaim               0      0    0        0            1         1\n  @barackobama           0      0    0        0            0         1\n  @joebiden              0      0    0        0            0         3\n  @kamalaharris          0      0    0        0            0         0\n  @hillaryclinton        0      0    0        0            0         0\n  @billclinton           0      0    0        0            0         0\n  @cbsnews               0      0    0        0            0         0\n                 features\nfeatures          @kamalaharris @hillaryclinton @billclinton @cbsnews\n  @youtube                    0               0            0        0\n  @bfmtv                      1               1            1        1\n  @cnn                        1               1            1        1\n  @lauhaim                    1               1            1        1\n  @barackobama                1               1            1        1\n  @joebiden                   1               1            1        1\n  @kamalaharris               0               1            1        1\n  @hillaryclinton             0               0            1        1\n  @billclinton                0               0            0        1\n  @cbsnews                    0               0            0        0\n[ reached max_nfeat ... 10 more features, reached max_nfeat ... 701 more features ]\n\nuser_fcm &lt;- fcm_select(user_fcm, pattern = topuser)\ntextplot_network(user_fcm, min_freq = 20, edge_color = \"firebrick\", edge_alpha = 0.8, edge_size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Wordcloud\n# based on US presidential inaugural address texts, and metadata (for the corpus), from 1789 to present.\ndfm_inaug &lt;- corpus_subset(data_corpus_inaugural, Year &lt;= 1826) %&gt;% \n  tokens(remove_punct = TRUE) %&gt;% \n  tokens_remove(stopwords('english')) %&gt;% \n  dfm() %&gt;%\n  dfm_trim(min_termfreq = 10, verbose = FALSE)\n\nset.seed(100)\ntextplot_wordcloud(dfm_inaug)\n\n\n\n\n\n\n\ninaug_speech = data_corpus_inaugural\n\ncorpus_subset(data_corpus_inaugural, \n              President %in% c(\"Trump\", \"Obama\", \"Bush\")) %&gt;%\n  tokens(remove_punct = TRUE) %&gt;%\n  tokens_remove(stopwords(\"english\")) %&gt;%\n  dfm() %&gt;%\n  dfm_group(groups = President) %&gt;%\n  dfm_trim(min_termfreq = 5, verbose = FALSE) %&gt;%\n  textplot_wordcloud(comparison = TRUE)\n\n\n\n\n\n\n\ntextplot_wordcloud(dfm_inaug, min_count = 10,\n                   color = c('red', 'pink', 'green', 'purple', 'orange', 'blue'))\n\n\n\n\n\n\n\ndata_corpus_inaugural_subset &lt;- \n  corpus_subset(data_corpus_inaugural, Year &gt; 1949)\nkwic(tokens(data_corpus_inaugural_subset), pattern = \"american\") %&gt;%\n  textplot_xray()\n\n\n\n\n\n\n\ntextplot_xray(\n  kwic(tokens(data_corpus_inaugural_subset), pattern = \"american\"),\n  kwic(tokens(data_corpus_inaugural_subset), pattern = \"people\"),\n  kwic(tokens(data_corpus_inaugural_subset), pattern = \"communist\")\n)\n\n\n\n\n\n\n\n\n\n\nWhy is the “communist” plot missing?\n\ntheme_set(theme_bw())\ng &lt;- textplot_xray(\n  kwic(tokens(data_corpus_inaugural_subset), pattern = \"american\"),\n  kwic(tokens(data_corpus_inaugural_subset), pattern = \"people\"),\n  kwic(tokens(data_corpus_inaugural_subset), pattern = \"communist\")\n)\ng + aes(color = keyword) + \n  scale_color_manual(values = c(\"blue\", \"red\", \"green\")) +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n# Drawing (quanteda.textstats)\nfeatures_dfm_inaug &lt;- textstat_frequency(dfm_inaug, n = 100)\n\n\n\n\n\n\n\nfeatures_dfm_inaug$feature &lt;- with(features_dfm_inaug, reorder(feature, -frequency))\n\nggplot(features_dfm_inaug, aes(x = feature, y = frequency)) +\n  geom_point() + \n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\n\n\n# Get frequency grouped by president\nfreq_grouped &lt;- textstat_frequency(dfm(tokens(data_corpus_inaugural_subset)), \n                                   groups = data_corpus_inaugural_subset$President)\n\n\n\n\n\n\n\nfreq_american &lt;- subset(freq_grouped, freq_grouped$feature %in% \"american\")  \n\nggplot(freq_american, aes(x = group, y = frequency)) +\n  geom_point() + \n  scale_y_continuous(limits = c(0, 14), breaks = c(seq(0, 14, 2))) +\n  xlab(NULL) + \n  ylab(\"Frequency\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\ndfm_rel_freq &lt;- dfm_weight(dfm(tokens(data_corpus_inaugural_subset)), scheme = \"prop\") * 100\nhead(dfm_rel_freq)\n\nDocument-feature matrix of: 6 documents, 4,625 features (86.44% sparse) and 4 docvars.\n                 features\ndocs                      my    friends        ,    before          i\n  1953-Eisenhower 0.14582574 0.14582574 4.593511 0.1822822 0.10936930\n  1957-Eisenhower 0.20975354 0.10487677 6.345045 0.1573152 0.05243838\n  1961-Kennedy    0.19467878 0.06489293 5.451006 0.1297859 0.32446463\n  1965-Johnson    0.17543860 0.05847953 5.555556 0.2339181 0.87719298\n  1969-Nixon      0.28973510 0          5.546358 0.1241722 0.86920530\n  1973-Nixon      0.05012531 0.05012531 4.812030 0.2005013 0.60150376\n                 features\ndocs                   begin      the expression       of     those\n  1953-Eisenhower 0.03645643 6.234050 0.03645643 5.176814 0.1458257\n  1957-Eisenhower 0          5.977976 0          5.034085 0.1573152\n  1961-Kennedy    0.19467878 5.580792 0          4.218040 0.4542505\n  1965-Johnson    0          4.502924 0          3.333333 0.1754386\n  1969-Nixon      0          5.629139 0          3.890728 0.4552980\n  1973-Nixon      0          4.160401 0          3.408521 0.3007519\n[ reached max_nfeat ... 4,615 more features ]\n\nrel_freq &lt;- textstat_frequency(dfm_rel_freq, groups = dfm_rel_freq$President)\n\n\n\n\n# Revised\nrel_freq_american &lt;- subset(rel_freq, feature %in% \"american\")  \n\nggplot(rel_freq_american, aes(x = group, y = frequency)) +\n  geom_point() + \n  scale_y_continuous(limits = c(0, 0.7), breaks = c(seq(0, 0.7, 0.1))) +\n  xlab(NULL) + \n  ylab(\"Relative frequency\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\ndfm_weight_pres &lt;- data_corpus_inaugural %&gt;%\n  corpus_subset(Year &gt; 2000) %&gt;%\n  tokens(remove_punct = TRUE) %&gt;%\n  tokens_remove(stopwords(\"english\")) %&gt;%\n  dfm() %&gt;%\n  dfm_weight(scheme = \"prop\")\n\n\n\n\n\n\n\n\na. Biden, Bush, Obama, & Trump\n\nfreq_weight &lt;- textstat_frequency(dfm_weight_pres, n = 10, \n                                  groups = dfm_weight_pres$President)\n\nggplot(data = freq_weight, aes(x = nrow(freq_weight):1, y = frequency)) +\n  geom_point() +\n  facet_wrap(~ group, scales = \"free\") +\n  coord_flip() +\n  scale_x_continuous(breaks = nrow(freq_weight):1,\n                     labels = freq_weight$feature) +\n  labs(x = NULL, y = \"Relative frequency\")\n\n\n\n\n\n\n\n\n\n\nb. Keyness: Obama & Trump\n\n# Only select speeches by Obama and Trump\npres_corpus &lt;- corpus_subset(data_corpus_inaugural, \n                             President %in% c(\"Obama\", \"Trump\"))\n\n# Create a dfm grouped by president\npres_dfm &lt;- tokens(pres_corpus, remove_punct = TRUE) %&gt;%\n  tokens_remove(stopwords(\"english\")) %&gt;%\n  tokens_group(groups = President) %&gt;%\n  dfm()\n\n# Calculate keyness and determine Trump as target group\nresult_keyness &lt;- textstat_keyness(pres_dfm, target = \"Trump\")\n\n# Plot estimated word keyness\ntextplot_keyness(result_keyness) \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\nℹ The deprecated feature was likely used in the quanteda.textplots package.\n  Please report the issue at\n  &lt;https://github.com/quanteda/quanteda.textplots/issues&gt;.\n\n\n\n\n\n\n\n\n\n\n\nc. Trump\n\n# Plot without the reference text \ntextplot_keyness(result_keyness, show_reference = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSimilarlities\nThe wordcloud shows that U.S. presidents have frequently used specific words. Most of them are nouns: government, people, states, nations, war, nation, peace, citizens, country, us and union. Some of them are verbs: may, can, and shall. Also, one adjective: united. Based on these words, it can be inferred that the language conveys a soft tone focused on integration and harmony.\n\n\nDifferences\nEach president has used specific words, and some of these overlap including us, america, and nation. However, they have also frequently used different words, which may reflect their political perspectives and approaches.\nBush is clearly a strong supporter of liberalism. Freedom and liberty are among his top 10 most-used words.\nTrump is well known for his “Make America Great Again” (MAGA) slogan, and his most frequent words reflect this: america, american, and great. Notably, he says ‘thank’ very frequently, which may serve to encourage or connect with his supporters. Interestingly, Trump does not use “us” as often as he does america, american, country, and nation.\nObama uses more non-nouns in his top 10 than the others, such as must, can, new, every, and now. These choices make his speech style more distinctive compared to other presidents.\nBiden seems to emphasize harmony and democracy, as his most frequent words are ‘one’ and ‘democracy’.\nInterestingly, both Democratic presidents (Obama and Biden) share “us” as their most frequent word, unlike the two Republican presidents.\n\n\n\n\n\n\n\n\n\n\n“Wordfish is a Poisson scaling model that estimates one-dimension document positions using maximum likelihood (Slapin and Proksch, 2008). Both the estimated position of words and the positions of the documents can be plotted.”\n- Quanteda (https://quanteda.io/articles/pkgdown/examples/plotting.html?q=wordfihs#wordfish)\n\n\n\n\n\n\nwf &lt;- textmodel_wordfish(dfm(tokens(data_corpus_irishbudget2010)), dir = c(6, 5))\n\n# Plot estimated word positions\ntextplot_scale1d(wf, margin = \"features\", \n                 highlighted = c(\"government\", \"global\", \"children\", \n                                 \"bank\", \"economy\", \"the\", \"citizenship\",\n                                 \"productivity\", \"deficit\"), \n                 highlighted_color = \"red\")\n\n\n\n\n\n\n\n# Plot estimated document positions\ntextplot_scale1d(wf, groups = data_corpus_irishbudget2010$party)\n\n\n\n\n\n\n\n# Transform corpus to dfm\nie_dfm &lt;- dfm(tokens(data_corpus_irishbudget2010))\n\n# Run correspondence analysis on dfm\nca &lt;- textmodel_ca(ie_dfm)\n\n# Plot estimated positions and group by party\ntextplot_scale1d(ca, margin = \"documents\",\n                 groups = docvars(data_corpus_irishbudget2010, \"party\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Transform corpus to dfm\ndata(data_corpus_irishbudget2010, package = \"quanteda.textmodels\")\nie_dfm &lt;- dfm(tokens(data_corpus_irishbudget2010))\n\n# Set reference scores\nrefscores &lt;- c(rep(NA, 4), 1, -1, rep(NA, 8))\n\n# Predict Wordscores model\nws &lt;- textmodel_wordscores(ie_dfm, y = refscores, smooth = 1)\n\n# Plot estimated word positions (highlight words and print them in red)\ntextplot_scale1d(ws,\n                 highlighted = c(\"minister\", \"have\", \"our\", \"budget\"), \n                 highlighted_color = \"red\")\n\n\n\n\n\n\n\n\n\n\n\n# Get predictions\npred &lt;- predict(ws, se.fit = TRUE)\n\n# Plot estimated document positions and group by \"party\" variable\ntextplot_scale1d(pred, margin = \"documents\",\n                 groups = docvars(data_corpus_irishbudget2010, \"party\"))\n\n\n\n\n\n\n\n# Plot estimated document positions using the LBG transformation and group by \"party\" variable\n\npred_lbg &lt;- predict(ws, se.fit = TRUE, rescaling = \"lbg\")\n\ntextplot_scale1d(pred_lbg, margin = \"documents\",\n                 groups = docvars(data_corpus_irishbudget2010, \"party\"))"
  },
  {
    "objectID": "assignments/assign06.html#quarto",
    "href": "assignments/assign06.html#quarto",
    "title": "Assignment 05",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "assignments/assign06.html#running-code",
    "href": "assignments/assign06.html#running-code",
    "title": "Assignment 05",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "assignments/assign05.html#search-government-documents",
    "href": "assignments/assign05.html#search-government-documents",
    "title": "Assignment 05",
    "section": "",
    "text": "Website GovInfo: https://www.govinfo.gov/app/search/\n\n\n\n\n\n\n# Clean Memory\ngc(reset = TRUE)\n\n          used (Mb) gc trigger (Mb) max used (Mb)\nNcells  600986 32.1    1366068   73   600986 32.1\nVcells 1092528  8.4    8388608   64  1092528  8.4\n\n# Load packages\nlibrary(purrr)\nlibrary(magrittr)\n\n\nAttaching package: 'magrittr'\n\n\nThe following object is masked from 'package:purrr':\n\n    set_names\n\nlibrary(rjson)\nlibrary(jsonlite)\n\n\nAttaching package: 'jsonlite'\n\n\nThe following objects are masked from 'package:rjson':\n\n    fromJSON, toJSON\n\n\nThe following object is masked from 'package:purrr':\n\n    flatten\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:data.table':\n\n    between, first, last\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\n\n\n\n\n\n# Set persistent working directory\nknitr::opts_knit$set(root.dir = \"C:/Users/User/Desktop/EPPS6302/GovInfo/\")\n\n\n\n\n\n\n\n\n# Load the Metadata Files\n\n## CSV method\ngovfiles= read.csv(file=\"https://github.com/datageneration/datamethods/raw/refs/heads/master/webdata/govinfo-search-results-2024-10-13T07_10_42.csv\", skip=2)\n\n## JSON method\n### rjson\ngf_list &lt;- rjson::fromJSON(file =\"https://github.com/datageneration/datamethods/raw/refs/heads/master/webdata/govinfo-search-results-2024-10-13T07_18_29.json\")\ngovfile2=dplyr::bind_rows(gf_list$resultSet)\n\n### jsonlite\ngf_list1 = jsonlite::read_json(\"https://github.com/datageneration/datamethods/raw/refs/heads/master/webdata/govinfo-search-results-2024-10-13T07_18_29.json\")\n\n\n\n\n\n\n\n\ngovfiles3 &lt;- gf_list1$resultSet\n\n# One more step\ngovfiles3 &lt;- gf_list1$resultSet |&gt; dplyr::bind_rows()\n\n\n\n\n\n\n\n\ngovfiles$id = govfiles$packageId\npdf_govfiles_url = govfiles3$pdfLink\npdf_govfiles_id &lt;- govfiles3$index\n\n# Download folder\nsave_dir &lt;- \"C:/Users/User/Desktop/EPPS6302/GovInfo/\"\n\n\n\n\n\n\n\n\ndownload_govfiles_pdf &lt;- function(url, id) {\n  tryCatch({\n    destfile &lt;- paste0(save_dir, \"govfiles_\", id, \".pdf\")\n    download.file(url, destfile = destfile, mode = \"wb\") # Binary files\n    Sys.sleep(runif(1, 1, 3))  # Important: random sleep between 1 and 3 seconds to avoid suspicion of \"hacking\" the server\n    return(paste(\"Successfully downloaded:\", url))\n  },\n  error = function(e) {\n    return(paste(\"Failed to download:\", url))\n  })\n}\n\n\n\n\n\n\n\n\n# One document\nstart.time &lt;- Sys.time()\nmessage(\"Starting downloads\")\n\nStarting downloads\n\nresults &lt;- 1:1 %&gt;% \n  purrr::map_chr(~ download_govfiles_pdf(pdf_govfiles_url[.], pdf_govfiles_id[.]))\n\nWarning in download.file(url, destfile = destfile, mode = \"wb\"): cannot open\nURL\n'https://www.govinfo.gov/content/pkg/BILLS-118sres890is/pdf/BILLS-118sres890is.pdf':\nHTTP status was '503 Service Unavailable'\n\nmessage(\"Finished downloads\")\n\nFinished downloads\n\nend.time &lt;- Sys.time()\ntime.taken &lt;- end.time - start.time\ntime.taken\n\nTime difference of 0.212698 secs\n\n# Ten documents\nstart.time &lt;- Sys.time()\nmessage(\"Starting downloads\")\n\nStarting downloads\n\nresults &lt;- 1:10 %&gt;% \n  purrr::map_chr(~ download_govfiles_pdf(pdf_govfiles_url[.], pdf_govfiles_id[.]))\nmessage(\"Finished downloads\")\n\nFinished downloads\n\nend.time &lt;- Sys.time()\ntime.taken &lt;- end.time - start.time\ntime.taken\n\nTime difference of 20.5731 secs\n\n# Result\nprint(results)\n\n [1] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/BILLS-118sres890is/pdf/BILLS-118sres890is.pdf\"        \n [2] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/BILLS-118sjres114is/pdf/BILLS-118sjres114is.pdf\"      \n [3] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/BILLS-118sres805ats/pdf/BILLS-118sres805ats.pdf\"      \n [4] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/BILLS-118sjres115is/pdf/BILLS-118sjres115is.pdf\"      \n [5] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/BILLS-118sjres113is/pdf/BILLS-118sjres113is.pdf\"      \n [6] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/BILLS-118sjres111is/pdf/BILLS-118sjres111is.pdf\"      \n [7] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/BILLS-118sjres112is/pdf/BILLS-118sjres112is.pdf\"      \n [8] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/CREC-2024-09-25/pdf/CREC-2024-09-25-pt1-PgD951.pdf\"   \n [9] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/CREC-2024-09-25/pdf/CREC-2024-09-25-pt1-PgS6417-2.pdf\"\n[10] \"Successfully downloaded: https://www.govinfo.gov/content/pkg/CREC-2024-09-25/pdf/CREC-2024-09-25-pt1-PgS6418.pdf\"  \n\n\n\n\n\n\n\n\nstart.time &lt;- Sys.time()\nmessage(“Starting downloads”)\nresults &lt;- 1:length(pdf_govfiles_url) %&gt;%\npurrr::map_chr(~ download_govfiles_pdf(pdf_govfiles_url[.], pdf_govfiles_id[.]))\nmessage(“Finished downloads”)\nend.time &lt;- Sys.time()\ntime.taken &lt;- end.time - start.time\ntime.taken"
  },
  {
    "objectID": "assignments/assign05.html#report",
    "href": "assignments/assign05.html#report",
    "title": "Assignment 05",
    "section": "",
    "text": "1) Difficulties\n\nDuring the scraping process for government documents from GovInfo.gov, I encountered several challenges.\nThe GovInfo site did not provide options to download search results in CSV or JSON formats directly from the search page. This broke the expected workflow in the assignment, which relies on metadata files to identify and download documents programmatically.\nThus, I had to manually download PDF files. This made the process time-consuming and error-prone.\nSample metadata from GitHub was outdated and did not match the documents I downloaded. Because of this, matching file names to metadata for analysis failed, which limited my ability to annotate or summarize the documents meaningfully.\n\n2) How useable the scraped data?\n\nEven though I was able to download 10 recent documents related to the Foreign Relations Committee, the data was in PDF format, which is difficult to process without extracting the text. The lack of metadata information (such as titles, dates, and summaries) made it difficult to filter, organize, or analyze the documents systematically.\nOverall, the scraped data is partially usable but not ideal for structured analysis without additional manual processing.\n\n\n3) How to improve?\nEven if the website do not provide a CSV or JSON download, I can build a simple metadata table in R. Use file names, inferred dates, and keywords extracted from the text to organize and annotate the documents."
  },
  {
    "objectID": "assignments/assign06.html#quanteda",
    "href": "assignments/assign06.html#quanteda",
    "title": "Assignment 06",
    "section": "",
    "text": "library(quanteda)\n\nPackage version: 4.3.1\nUnicode version: 15.1\nICU version: 74.1\n\n\nParallel computing: 22 of 22 threads used.\n\n\nSee https://quanteda.io for tutorials and examples.\n\nlibrary(quanteda.textmodels)\nlibrary(quanteda.textplots)\nlibrary(quanteda.textstats)\nlibrary(readr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "assignments/assign06.html#analysis",
    "href": "assignments/assign06.html#analysis",
    "title": "Assignment 06",
    "section": "",
    "text": "summit &lt;- read_csv(\"https://raw.githubusercontent.com/datageneration/datamethods/master/textanalytics/summit_11162021.csv\")\n\nRows: 14520 Columns: 90\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (50): screen_name, text, source, reply_to_screen_name, hashtags, symbol...\ndbl  (26): user_id, status_id, display_text_width, reply_to_status_id, reply...\nlgl  (10): is_quote, is_retweet, quote_count, reply_count, ext_media_type, q...\ndttm  (4): created_at, quoted_created_at, retweet_created_at, account_create...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nView(summit)\n\nsum_twt = summit$text\ntoks = tokens(sum_twt)\nsumtwtdfm &lt;- dfm(toks)\nclass(toks)\n\n[1] \"tokens\"\n\n\n\n\n\n\n\n\n# Note: https://quanteda.io/reference/textmodel_lsa.html\n\nsum_lsa &lt;- textmodel_lsa(sumtwtdfm, nd=4,  margin = c(\"both\", \"documents\", \"features\"))\nsummary(sum_lsa)\n\n                Length    Class     Mode   \nsk                      4 -none-    numeric\ndocs                58080 -none-    numeric\nfeatures            63972 -none-    numeric\nmatrix_low_rank 232218360 -none-    numeric\ndata            232218360 dgCMatrix S4     \n\nhead(sum_lsa$docs)\n\n              [,1]          [,2]          [,3]          [,4]\ntext1 8.678102e-03  9.529008e-03 -3.178574e-03  1.380732e-02\ntext2 8.676818e-06 -8.806186e-06 -5.989637e-06  1.677631e-05\ntext3 2.922127e-03  6.778967e-03  1.131673e-03 -3.176902e-03\ntext4 1.046624e-02  8.884054e-04 -4.282723e-03  4.960680e-03\ntext5 3.251208e-03  8.005843e-03  2.208204e-04 -4.656367e-03\ntext6 3.251208e-03  8.005843e-03  2.208204e-04 -4.656367e-03\n\nclass(sum_lsa)\n\n[1] \"textmodel_lsa\"\n\ntweet_dfm &lt;- tokens(sum_twt, remove_punct = TRUE) %&gt;%\n  dfm()\nhead(tweet_dfm)\n\nDocument-feature matrix of: 6 documents, 15,927 features (99.89% sparse) and 0 docvars.\n       features\ndocs    breaking news us president biden amp communist china leader xi\n  text1        1    1  1         1     1   1         1     2      1  1\n  text2        0    0  0         0     0   0         0     0      0  0\n  text3        0    0  0         0     1   0         0     0      0  1\n  text4        0    0  0         1     1   0         0     0      0  1\n  text5        0    0  0         0     1   0         0     0      0  1\n  text6        0    0  0         0     1   0         0     0      0  1\n[ reached max_nfeat ... 15,917 more features ]\n\ntag_dfm &lt;- dfm_select(tweet_dfm, pattern = \"#*\")\ntoptag &lt;- names(topfeatures(tag_dfm, 50))\nhead(toptag, 10)\n\n [1] \"#china\"       \"#biden\"       \"#xijinping\"   \"#joebiden\"    \"#america\"    \n [6] \"#americans\"   \"#coronavirus\" \"#fentanyl\"    \"#xi\"          \"#us\"         \n\nlibrary(\"quanteda.textplots\")\ntag_fcm &lt;- fcm(tag_dfm)\nhead(tag_fcm)\n\nFeature co-occurrence matrix of: 6 by 665 features.\n               features\nfeatures        #breaking #breakingnews #biden #china #usa #pray4america\n  #breaking             0             4      5      5    5             0\n  #breakingnews         0             0      4      5    4             0\n  #biden                0             0      0    443   49             0\n  #china                0             0      0      8   76             0\n  #usa                  0             0      0      0    6             0\n  #pray4america         0             0      0      0    0             0\n               features\nfeatures        #joebiden #xijinping #america #americans\n  #breaking             0          0        0          0\n  #breakingnews         0          0        0          0\n  #biden              299        370      302        295\n  #china              339        434      308        295\n  #usa                 12         15        0          0\n  #pray4america         0          0        0          0\n[ reached max_nfeat ... 655 more features ]\n\ntopgat_fcm &lt;- fcm_select(tag_fcm, pattern = toptag)\ntextplot_network(topgat_fcm, min_freq = 50, edge_alpha = 0.8, edge_size = 1)\n\n\n\n\n\n\n\nuser_dfm &lt;- dfm_select(tweet_dfm, pattern = \"@*\")\ntopuser &lt;- names(topfeatures(user_dfm, 50))\nhead(topuser, 20)\n\n [1] \"@potus\"           \"@politico\"        \"@joebiden\"        \"@jendeben\"       \n [5] \"@eneskanter\"      \"@nwadhams\"        \"@phelimkine\"      \"@nahaltoosi\"     \n [9] \"@nba\"             \"@washwizards\"     \"@pelicansnba\"     \"@capitalonearena\"\n[13] \"@kevinliptakcnn\"  \"@foxbusiness\"     \"@morningsmaria\"   \"@scmpnews\"       \n[17] \"@petermartin_pcm\" \"@nytimes\"         \"@uyghur_american\" \"@kaylatausche\"   \n\nuser_fcm &lt;- fcm(user_dfm)\nhead(user_fcm, 20)\n\nFeature co-occurrence matrix of: 20 by 711 features.\n                 features\nfeatures          @youtube @bfmtv @cnn @lauhaim @barackobama @joebiden\n  @youtube               0      0    0        0            0         0\n  @bfmtv                 0      0    1        1            1         1\n  @cnn                   0      0    0        1            1         1\n  @lauhaim               0      0    0        0            1         1\n  @barackobama           0      0    0        0            0         1\n  @joebiden              0      0    0        0            0         3\n  @kamalaharris          0      0    0        0            0         0\n  @hillaryclinton        0      0    0        0            0         0\n  @billclinton           0      0    0        0            0         0\n  @cbsnews               0      0    0        0            0         0\n                 features\nfeatures          @kamalaharris @hillaryclinton @billclinton @cbsnews\n  @youtube                    0               0            0        0\n  @bfmtv                      1               1            1        1\n  @cnn                        1               1            1        1\n  @lauhaim                    1               1            1        1\n  @barackobama                1               1            1        1\n  @joebiden                   1               1            1        1\n  @kamalaharris               0               1            1        1\n  @hillaryclinton             0               0            1        1\n  @billclinton                0               0            0        1\n  @cbsnews                    0               0            0        0\n[ reached max_nfeat ... 10 more features, reached max_nfeat ... 701 more features ]\n\nuser_fcm &lt;- fcm_select(user_fcm, pattern = topuser)\ntextplot_network(user_fcm, min_freq = 20, edge_color = \"firebrick\", edge_alpha = 0.8, edge_size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Wordcloud\n# based on US presidential inaugural address texts, and metadata (for the corpus), from 1789 to present.\ndfm_inaug &lt;- corpus_subset(data_corpus_inaugural, Year &lt;= 1826) %&gt;% \n  tokens(remove_punct = TRUE) %&gt;% \n  tokens_remove(stopwords('english')) %&gt;% \n  dfm() %&gt;%\n  dfm_trim(min_termfreq = 10, verbose = FALSE)\n\nset.seed(100)\ntextplot_wordcloud(dfm_inaug)\n\n\n\n\n\n\n\ninaug_speech = data_corpus_inaugural\n\ncorpus_subset(data_corpus_inaugural, \n              President %in% c(\"Trump\", \"Obama\", \"Bush\")) %&gt;%\n  tokens(remove_punct = TRUE) %&gt;%\n  tokens_remove(stopwords(\"english\")) %&gt;%\n  dfm() %&gt;%\n  dfm_group(groups = President) %&gt;%\n  dfm_trim(min_termfreq = 5, verbose = FALSE) %&gt;%\n  textplot_wordcloud(comparison = TRUE)\n\n\n\n\n\n\n\ntextplot_wordcloud(dfm_inaug, min_count = 10,\n                   color = c('red', 'pink', 'green', 'purple', 'orange', 'blue'))\n\n\n\n\n\n\n\ndata_corpus_inaugural_subset &lt;- \n  corpus_subset(data_corpus_inaugural, Year &gt; 1949)\nkwic(tokens(data_corpus_inaugural_subset), pattern = \"american\") %&gt;%\n  textplot_xray()\n\n\n\n\n\n\n\ntextplot_xray(\n  kwic(tokens(data_corpus_inaugural_subset), pattern = \"american\"),\n  kwic(tokens(data_corpus_inaugural_subset), pattern = \"people\"),\n  kwic(tokens(data_corpus_inaugural_subset), pattern = \"communist\")\n)\n\n\n\n\n\n\n\n\n\n\nWhy is the “communist” plot missing?\n\ntheme_set(theme_bw())\ng &lt;- textplot_xray(\n  kwic(tokens(data_corpus_inaugural_subset), pattern = \"american\"),\n  kwic(tokens(data_corpus_inaugural_subset), pattern = \"people\"),\n  kwic(tokens(data_corpus_inaugural_subset), pattern = \"communist\")\n)\ng + aes(color = keyword) + \n  scale_color_manual(values = c(\"blue\", \"red\", \"green\")) +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n# Drawing (quanteda.textstats)\nfeatures_dfm_inaug &lt;- textstat_frequency(dfm_inaug, n = 100)\n\n\n\n\n\n\n\nfeatures_dfm_inaug$feature &lt;- with(features_dfm_inaug, reorder(feature, -frequency))\n\nggplot(features_dfm_inaug, aes(x = feature, y = frequency)) +\n  geom_point() + \n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\n\n\n# Get frequency grouped by president\nfreq_grouped &lt;- textstat_frequency(dfm(tokens(data_corpus_inaugural_subset)), \n                                   groups = data_corpus_inaugural_subset$President)\n\n\n\n\n\n\n\nfreq_american &lt;- subset(freq_grouped, freq_grouped$feature %in% \"american\")  \n\nggplot(freq_american, aes(x = group, y = frequency)) +\n  geom_point() + \n  scale_y_continuous(limits = c(0, 14), breaks = c(seq(0, 14, 2))) +\n  xlab(NULL) + \n  ylab(\"Frequency\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\ndfm_rel_freq &lt;- dfm_weight(dfm(tokens(data_corpus_inaugural_subset)), scheme = \"prop\") * 100\nhead(dfm_rel_freq)\n\nDocument-feature matrix of: 6 documents, 4,625 features (86.44% sparse) and 4 docvars.\n                 features\ndocs                      my    friends        ,    before          i\n  1953-Eisenhower 0.14582574 0.14582574 4.593511 0.1822822 0.10936930\n  1957-Eisenhower 0.20975354 0.10487677 6.345045 0.1573152 0.05243838\n  1961-Kennedy    0.19467878 0.06489293 5.451006 0.1297859 0.32446463\n  1965-Johnson    0.17543860 0.05847953 5.555556 0.2339181 0.87719298\n  1969-Nixon      0.28973510 0          5.546358 0.1241722 0.86920530\n  1973-Nixon      0.05012531 0.05012531 4.812030 0.2005013 0.60150376\n                 features\ndocs                   begin      the expression       of     those\n  1953-Eisenhower 0.03645643 6.234050 0.03645643 5.176814 0.1458257\n  1957-Eisenhower 0          5.977976 0          5.034085 0.1573152\n  1961-Kennedy    0.19467878 5.580792 0          4.218040 0.4542505\n  1965-Johnson    0          4.502924 0          3.333333 0.1754386\n  1969-Nixon      0          5.629139 0          3.890728 0.4552980\n  1973-Nixon      0          4.160401 0          3.408521 0.3007519\n[ reached max_nfeat ... 4,615 more features ]\n\nrel_freq &lt;- textstat_frequency(dfm_rel_freq, groups = dfm_rel_freq$President)\n\n\n\n\n# Revised\nrel_freq_american &lt;- subset(rel_freq, feature %in% \"american\")  \n\nggplot(rel_freq_american, aes(x = group, y = frequency)) +\n  geom_point() + \n  scale_y_continuous(limits = c(0, 0.7), breaks = c(seq(0, 0.7, 0.1))) +\n  xlab(NULL) + \n  ylab(\"Relative frequency\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\ndfm_weight_pres &lt;- data_corpus_inaugural %&gt;%\n  corpus_subset(Year &gt; 2000) %&gt;%\n  tokens(remove_punct = TRUE) %&gt;%\n  tokens_remove(stopwords(\"english\")) %&gt;%\n  dfm() %&gt;%\n  dfm_weight(scheme = \"prop\")\n\n\n\n\n\n\n\n\na. Biden, Bush, Obama, & Trump\n\nfreq_weight &lt;- textstat_frequency(dfm_weight_pres, n = 10, \n                                  groups = dfm_weight_pres$President)\n\nggplot(data = freq_weight, aes(x = nrow(freq_weight):1, y = frequency)) +\n  geom_point() +\n  facet_wrap(~ group, scales = \"free\") +\n  coord_flip() +\n  scale_x_continuous(breaks = nrow(freq_weight):1,\n                     labels = freq_weight$feature) +\n  labs(x = NULL, y = \"Relative frequency\")\n\n\n\n\n\n\n\n\n\n\nb. Keyness: Obama & Trump\n\n# Only select speeches by Obama and Trump\npres_corpus &lt;- corpus_subset(data_corpus_inaugural, \n                             President %in% c(\"Obama\", \"Trump\"))\n\n# Create a dfm grouped by president\npres_dfm &lt;- tokens(pres_corpus, remove_punct = TRUE) %&gt;%\n  tokens_remove(stopwords(\"english\")) %&gt;%\n  tokens_group(groups = President) %&gt;%\n  dfm()\n\n# Calculate keyness and determine Trump as target group\nresult_keyness &lt;- textstat_keyness(pres_dfm, target = \"Trump\")\n\n# Plot estimated word keyness\ntextplot_keyness(result_keyness) \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\nℹ The deprecated feature was likely used in the quanteda.textplots package.\n  Please report the issue at\n  &lt;https://github.com/quanteda/quanteda.textplots/issues&gt;.\n\n\n\n\n\n\n\n\n\n\n\nc. Trump\n\n# Plot without the reference text \ntextplot_keyness(result_keyness, show_reference = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSimilarlities\nThe wordcloud shows that U.S. presidents have frequently used specific words. Most of them are nouns: government, people, states, nations, war, nation, peace, citizens, country, us and union. Some of them are verbs: may, can, and shall. Also, one adjective: united. Based on these words, it can be inferred that the language conveys a soft tone focused on integration and harmony.\n\n\nDifferences\nEach president has used specific words, and some of these overlap including us, america, and nation. However, they have also frequently used different words, which may reflect their political perspectives and approaches.\nBush is clearly a strong supporter of liberalism. Freedom and liberty are among his top 10 most-used words.\nTrump is well known for his “Make America Great Again” (MAGA) slogan, and his most frequent words reflect this: america, american, and great. Notably, he says ‘thank’ very frequently, which may serve to encourage or connect with his supporters. Interestingly, Trump does not use “us” as often as he does america, american, country, and nation.\nObama uses more non-nouns in his top 10 than the others, such as must, can, new, every, and now. These choices make his speech style more distinctive compared to other presidents.\nBiden seems to emphasize harmony and democracy, as his most frequent words are ‘one’ and ‘democracy’.\nInterestingly, both Democratic presidents (Obama and Biden) share “us” as their most frequent word, unlike the two Republican presidents."
  },
  {
    "objectID": "assignments/assign06.html#wordfish",
    "href": "assignments/assign06.html#wordfish",
    "title": "Assignment 06",
    "section": "",
    "text": "“Wordfish is a Poisson scaling model that estimates one-dimension document positions using maximum likelihood (Slapin and Proksch, 2008). Both the estimated position of words and the positions of the documents can be plotted.”\n- Quanteda (https://quanteda.io/articles/pkgdown/examples/plotting.html?q=wordfihs#wordfish)\n\n\n\n\n\n\nwf &lt;- textmodel_wordfish(dfm(tokens(data_corpus_irishbudget2010)), dir = c(6, 5))\n\n# Plot estimated word positions\ntextplot_scale1d(wf, margin = \"features\", \n                 highlighted = c(\"government\", \"global\", \"children\", \n                                 \"bank\", \"economy\", \"the\", \"citizenship\",\n                                 \"productivity\", \"deficit\"), \n                 highlighted_color = \"red\")\n\n\n\n\n\n\n\n# Plot estimated document positions\ntextplot_scale1d(wf, groups = data_corpus_irishbudget2010$party)\n\n\n\n\n\n\n\n# Transform corpus to dfm\nie_dfm &lt;- dfm(tokens(data_corpus_irishbudget2010))\n\n# Run correspondence analysis on dfm\nca &lt;- textmodel_ca(ie_dfm)\n\n# Plot estimated positions and group by party\ntextplot_scale1d(ca, margin = \"documents\",\n                 groups = docvars(data_corpus_irishbudget2010, \"party\"))"
  },
  {
    "objectID": "assignments/assign06.html#extra",
    "href": "assignments/assign06.html#extra",
    "title": "Assignment 06",
    "section": "",
    "text": "# Transform corpus to dfm\ndata(data_corpus_irishbudget2010, package = \"quanteda.textmodels\")\nie_dfm &lt;- dfm(tokens(data_corpus_irishbudget2010))\n\n# Set reference scores\nrefscores &lt;- c(rep(NA, 4), 1, -1, rep(NA, 8))\n\n# Predict Wordscores model\nws &lt;- textmodel_wordscores(ie_dfm, y = refscores, smooth = 1)\n\n# Plot estimated word positions (highlight words and print them in red)\ntextplot_scale1d(ws,\n                 highlighted = c(\"minister\", \"have\", \"our\", \"budget\"), \n                 highlighted_color = \"red\")\n\n\n\n\n\n\n\n\n\n\n\n# Get predictions\npred &lt;- predict(ws, se.fit = TRUE)\n\n# Plot estimated document positions and group by \"party\" variable\ntextplot_scale1d(pred, margin = \"documents\",\n                 groups = docvars(data_corpus_irishbudget2010, \"party\"))\n\n\n\n\n\n\n\n# Plot estimated document positions using the LBG transformation and group by \"party\" variable\n\npred_lbg &lt;- predict(ws, se.fit = TRUE, rescaling = \"lbg\")\n\ntextplot_scale1d(pred_lbg, margin = \"documents\",\n                 groups = docvars(data_corpus_irishbudget2010, \"party\"))"
  }
]